# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will build the Dockerfile for the application and push it to the private registry
name: "Deploy FinanceMicromanager"
on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version Type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major
jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
          token: ${{ secrets.PAT }}
      - name: Bump VERSION file
        id: bump_version
        run: |
          bin/bump_version ${{ inputs.version_type }}
          echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT
      - name: Download coverage.csv artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage_csv
      - name: Inject new version tag into coverage.csv
        run: sed -i "s/VERSION/v${{ steps.bump_version.outputs.VERSION }}/" spec/coverage.csv
      - name: Commit new version and tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'Rodrigo Azevedo'
          git config --global user.email 'roooodcastro@users.noreply.github.com'
          git commit -am "Release v${{ steps.bump_version.outputs.VERSION }}"
          git push origin main
          git tag -a v${{ steps.bump_version.outputs.VERSION }} -m "Release v${{ steps.bump_version.outputs.VERSION }}"
          git push origin v${{ steps.bump_version.outputs.VERSION }}
      - name: Update HEAD
        uses: actions/checkout@v3
        with:
          ref: main
          token: ${{ secrets.PAT }}
      - name: Create new Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v${{ steps.bump_version.outputs.VERSION }}" \
            --title="Release ${{ steps.bump_version.outputs.VERSION }}" \
            --latest \
            --generate-notes
